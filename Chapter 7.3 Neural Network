import tensorflow as tf
from tensorflow import keras
from matplotlib import pyplot as plt
import numpy as np
import  cv2

print(tf.__version__)

fashion_mnist=keras.datasets.fashion_mnist
fashion_mnist

(train_images,train_labels),(test_images,test_labels)=fashion_mnist.load_data()
class_names=['T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker',
             'Bag','Ankle boot']

len(train_labels)
train_images.shape

plt.figure()
plt.imshow(train_images[0])
plt.show()

#binary convert
train_images=train_images/255.0
test_images=test_images/255.0

plt.figure(figsize=(10,10))
for i in range(20):
    plt.subplot(5,5,i+1)
    plt.imshow(train_images[i])
plt.show()

plt.figure(figsize=(10,10))
for i in range(20):
    plt.subplot(5,5,i+1)
    plt.imshow(train_images[i], cmap=plt.cm.binary)
plt.show()

#model
model=keras.Sequential([
        keras.layers.Flatten(input_shape=(28,28)),
        keras.layers.Dense(128,activation=tf.nn.relu),
        keras.layers.Dense(10, activation=tf.nn.softmax)
        ])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images,train_labels,epochs=10)


test_lost, test_acc=model.evaluate(test_images,test_labels)
print(test_acc,test_lost)


predictions=model.predict(test_images)
predictions[1]

img=test_images[1]
print(img.shape)
img=(np.expand_dims(img,0))

from keras.utils import plot_model
plot_model(model, to_file='model.png')
prediction_single=model.predict(img)
print(prediction_single)
